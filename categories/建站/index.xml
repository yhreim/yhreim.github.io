<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>建站 on 墨子的博客</title>
    <link>/categories/%E5%BB%BA%E7%AB%99/</link>
    <description>Recent content in 建站 on 墨子的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 09 Feb 2024 22:35:41 +0800</lastBuildDate><atom:link href="/categories/%E5%BB%BA%E7%AB%99/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何使用GithubPages建一个商业网站</title>
      <link>/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8githubpages%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%95%86%E4%B8%9A%E7%BD%91%E7%AB%99/</link>
      <pubDate>Fri, 09 Feb 2024 22:35:41 +0800</pubDate>
      
      <guid>/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8githubpages%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%95%86%E4%B8%9A%E7%BD%91%E7%AB%99/</guid>
      <description>那么今天的博客就写到这里
什么？太简单了，那就贴一张近期的美食照吧!
代码之外，还有香喷喷的美食😍
别看了，真的结束了
等等，7.3中有一个命令写错了，不是git remote push origin main，而是git push origin main。</description>
    </item>
    
    <item>
      <title>如何使用GithubPages建一个商业网站</title>
      <link>/posts/%E6%B5%8B%E8%AF%95%E5%8D%9A%E5%AE%A2%E5%85%B1%E4%BA%AB%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</link>
      <pubDate>Fri, 09 Feb 2024 22:35:41 +0800</pubDate>
      
      <guid>/posts/%E6%B5%8B%E8%AF%95%E5%8D%9A%E5%AE%A2%E5%85%B1%E4%BA%AB%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</guid>
      <description>那么今天的博客就写到这里
什么？太简单了，那就贴一张近期的美食照吧!
代码之外，还有香喷喷的美食😍
别看了，真的结束了
等等，7.3中有一个命令写错了，不是git remote push origin main，而是git push origin main。 点击查看详情 这里是详细内容，它将被隐藏，直到用户点击标题。
支持Markdown格式的内容，例如列表、链接或代码块。</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/posts/goisforlovers/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/posts/hugoisforlovers/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description>
    </item>
    
    <item>
      <title>MathJax 支持</title>
      <link>/posts/mathjax%E6%94%AF%E6%8C%81/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/mathjax%E6%94%AF%E6%8C%81/</guid>
      <description>Inline Math # $abc$ $e^{\pi i}=-1$ $\frac{3}{2}$$abc$ $e^{\pi i}=-1$ $\frac{3}{2}$
Display Math # $$ \sum_{i=1}^{n}\int_{0}^{\pi}\log_2{e^n} $$$$ \sum_{i=1}^{n}\int_{0}^{\pi}\log_2{e^n} $$
Using Latex Codeblock # ``` latex f(n)= \begin{cases} f(n-1)+f(n-2) &amp;amp; n \ge 3 \\ 1 &amp;amp; n=1,2 \end{cases} ``` $$f(n)= \begin{cases} f(n-1)&amp;#43;f(n-2) &amp;amp; n \ge 3 \\ 1 &amp;amp; n=1,2 \end{cases}$$</description>
    </item>
    
    <item>
      <title>扩展语法支持</title>
      <link>/posts/%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95%E6%94%AF%E6%8C%81/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95%E6%94%AF%E6%8C%81/</guid>
      <description>MkDocs 语法 # Hint # ::: markdown { title=Example, render=true } !!! note `markdown` text ::: markdown { title=Example, render=true } !!! note Custom Title `markdown` text
::: markdown { title=Example, render=true } ??? note Collapsible `markdown` text ::: markdown { title=Example, render=true } ???+ note Collapsible Open `markdown` text
Hint 允许包含和嵌套任意内容。
???+ bug ???+ bug ???+ bug Nested bugs.MkDocs 一共支持 12 种 Hint。
::: !!! note markdown text ::: !</description>
    </item>
    
  </channel>
</rss>
